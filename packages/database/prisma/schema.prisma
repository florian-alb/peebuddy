generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Roles {
  admin
  user
}

model User {
  id            String    @id
  name          String
  email         String    @unique
  emailVerified Boolean
  image         String?
  createdAt     DateTime  @default(now()) @db.Timestamp(6)
  updatedAt     DateTime? @db.Timestamp(6)
  deletedAt     DateTime? @db.Timestamp(6)
  created_at    DateTime  @default(now()) @db.Timestamp(6)
  updated_at    DateTime? @db.Timestamp(6)
  deleted_at    DateTime? @db.Timestamp(6)
  accounts      Account[]
  sessions      Session[]
  roles         Roles?

  @@map("user")
}

model Session {
  id        String    @id
  expiresAt DateTime
  token     String    @unique
  createdAt DateTime  @default(now()) @db.Timestamp(6)
  updatedAt DateTime? @db.Timestamp(6)
  deletedAt DateTime? @db.Timestamp(6)
  ipAddress String?
  userAgent String?
  userId    String
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime  @default(now()) @db.Timestamp(6)
  updatedAt             DateTime? @db.Timestamp(6)
  deletedAt             DateTime? @db.Timestamp(6)
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime  @default(now()) @db.Timestamp(6)
  updatedAt  DateTime? @db.Timestamp(6)
  deletedAt  DateTime? @db.Timestamp(6)

  @@map("verification")
}
